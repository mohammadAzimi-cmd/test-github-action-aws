#name: Service Containers Demo
#on:
#  push:
#
#
#jobs:
#  container-01:
#    runs-on: ubuntu-latest
#    services:
#      database:
#        image: mysql:8.0.28
#        ports:
#          - 3306:3306
#        env:
#          MYSQL_ROOT_PASSWORD: 123321
#    steps:
#      - name: get the code
#        uses: actions/checkout@v5
#      - name: sleep for a while
#        run: |
#          sleep 14;
#      - name: check mysql container is up and running??
#        shell: bash
#        run: |
#          mysql --host=database --user=root --password=123321 --database=mysql
#      - name: create a database
#        run:
#          mysql --host=database --user=root --password=123321 --database=mysql --execute 'CREATE DATABASE MAMAD;'
#      - name: create a database
#        run:
#          mysql --host=database --user=root --password=123321 --database=mysql --execute 'SHOW DATABASES;'
#
name: Service Containers Demo
on:
  push:

jobs:
  container-01:
    runs-on: ubuntu-latest
    services:
      database:
        image: mysql:8.0.28
        env:
          MYSQL_ROOT_PASSWORD: 123321
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -p123321 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -hdatabase -uroot -p123321 --silent; then
              echo "MySQL is up!"
              break
            fi
            sleep 2
          done

      - name: Create database
        run: |
          mysql --host=database --user=root --password=123321 --database=mysql \
            --execute "CREATE DATABASE MAMAD; SHOW DATABASES;"
