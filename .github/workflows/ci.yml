name: this is ci workflow

on:
  pull_request:
  push:
    branches:
      - "dev-*"
      - "feat/**"
      - "main"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get The Code
        uses: actions/checkout@v5

      - name: Cache virtual environment
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies (only if venv not cached)
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Run lightweight tests
        run: |
          source .venv/bin/activate
          python script.py


  test_cache:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: get the code
        uses: actions/checkout@v5

      - name: Restore virtual environment
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Use cached venv
        run: |
          source .venv/bin/activate
          # now your environment is ready without re-installing
          pytest  # or your big job here
